---
- name: Get AWX service information
  kubernetes.core.k8s_info:
    kubeconfig: "{{ awx_kubeconfig }}"
    kind: Service
    namespace: awx
    name: awx-deployment-service
  register: awx_service_information
  tags:
    - workflow_launch

- name: Set `controller_host` value for the Ansible tower
  set_fact:
    controller_host: "http://{{ awx_service_information.resources[0].status.loadBalancer.ingress[0].hostname }}"
  tags:
    - workflow_launch

- name: Set `controller_username` value for the Ansible tower
  set_fact:
    controller_username: "admin"
  tags:
    - workflow_launch

- name: Get AWX secret information
  kubernetes.core.k8s_info:
    kubeconfig: "{{ awx_kubeconfig }}"
    kind: Secret
    namespace: awx
    name: awx-deployment-admin-password
  register: awx_secret_information
  tags:
    - workflow_launch

- name: Set `controller_password` value for the Ansible tower
  set_fact:
    controller_password: "{{ awx_secret_information.resources[0].data.password | b64decode }}"
  tags:
    - workflow_launch

- name: Launch the workflow
  awx.awx.workflow_launch:
    controller_host: "{{ controller_host }}"
    controller_username: "{{ controller_username }}"
    controller_password: "{{ controller_password }}"
    workflow_template: "Scenario-{{scenario_number}}-One-Mode-Deployment"
    extra_vars:
      run_uuid: "{{ run_uuid }}"
      scenario_number: "{{ scenario_number }}"
      run_number: "{{ item }}"
      sre_agent_name__version_number: "{{ sre_agent_name__version_number }}"
      s3_bucket_name_for_results: "{{ s3_bucket_name_for_results }}"
      sre_bench_runner: "{{ sre_bench_runner | bool }}"
    wait: False
  loop: "{{ range(1,(number_of_runs |int)+1) | list }}"
  tags:
    - workflow_launch
